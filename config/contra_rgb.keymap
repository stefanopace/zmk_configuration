/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define COL      0
#define QWE      1
#define SYM      2
#define SY2      3
#define NUM      4
#define NAV      5
#define NV2      6
#define FN       7

#define COMPOSE_KEY K_APP

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };

        doeu: dollar_euro {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&kp DOLLAR>, <&euro>;
        };

        acc_a: accented_a {
            compatible = "zmk,behavior-mod-morph";
            label = "ACCENTED_A";
            #binding-cells = <0>;
            bindings = <&lo_acc_a>, <&up_acc_a>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acc_e: accented_e {
            compatible = "zmk,behavior-tap-dance";
            label = "ACCENTED_E";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&acc_e_grv>, <&acc_e_acu>;
        };

        acc_e_grv: accented_e_grv {
            compatible = "zmk,behavior-mod-morph";
            label = "ACCENTED_E_GRV";
            #binding-cells = <0>;
            bindings = <&lo_acc_e>, <&up_acc_e>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acc_e_acu: accented_e_acu {
            compatible = "zmk,behavior-mod-morph";
            label = "ACCENTED_E_ACU";
            #binding-cells = <0>;
            bindings = <&lo_acc_e_acu>, <&up_acc_e_acu>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acc_i: accented_i {
            compatible = "zmk,behavior-mod-morph";
            label = "ACCENTED_I";
            #binding-cells = <0>;
            bindings = <&lo_acc_i>, <&up_acc_i>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acc_o: accented_o {
            compatible = "zmk,behavior-mod-morph";
            label = "ACCENTED_O";
            #binding-cells = <0>;
            bindings = <&lo_acc_o>, <&up_acc_o>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        acc_u: accented_u {
            compatible = "zmk,behavior-mod-morph";
            label = "ACCENTED_U";
            #binding-cells = <0>;
            bindings = <&lo_acc_u>, <&up_acc_u>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        euro: euro {
            label = "TYPE_EURO_SYMBOL";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp E &kp EQUAL>
                ;
        };

        lo_acc_a: lower_accented_a {
            label = "LOWER_ACCENTED_A";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp A &kp GRAVE>
                ;
        };

        up_acc_a: upper_accented_a {
            label = "UPPER_ACCENTED_A";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp LS(A) &kp GRAVE>
                ;
        };

        lo_acc_e: lower_accented_e {
            label = "LOWER_ACCENTED_E";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp E &kp GRAVE>
                ;
        };

        up_acc_e: upper_accented_e {
            label = "UPPER_ACCENTED_E";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp LS(E) &kp GRAVE>
                ;
        };

        lo_acc_e_acu: lower_accented_e_acu {
            label = "LOWER_ACCENTED_E_ACU";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp E &kp SQT>
                ;
        };

        up_acc_e_acu: upper_accented_e_acu {
            label = "UPPER_ACCENTED_E_ACU";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp LS(E) &kp SQT>
                ;
        };

        lo_acc_i: lower_accented_i {
            label = "LOWER_ACCENTED_I";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp I &kp GRAVE>
                ;
        };

        up_acc_i: upper_accented_i {
            label = "UPPER_ACCENTED_I";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp LS(I) &kp GRAVE>
                ;
        };

        lo_acc_o: lower_accented_o {
            label = "LOWER_ACCENTED_O";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp O &kp GRAVE>
                ;
        };

        up_acc_o: upper_accented_o {
            label = "UPPER_ACCENTED_O";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp LS(O) &kp GRAVE>
                ;
        };

        lo_acc_u: lower_accented_u {
            label = "LOWER_ACCENTED_U";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp U &kp GRAVE>
                ;
        };

        up_acc_u: upper_accented_u {
            label = "UPPER_ACCENTED_U";
            compatible = "zmk,behavior-macro";
            tap-ms = <0>;
            wait-ms = <0>;
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp COMPOSE_KEY &kp LS(U) &kp GRAVE>
                ;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
    &lt FN ESC &kp Q     &kp W    &kp F                &kp P       &kp B      &kp J     &kp L        &kp U     &kp Y     &kp SQT       &kp GRAVE
    &kp TAB    &kp A     &kp R    &kp S                &kp T       &kp G      &kp M     &kp N        &kp E     &kp I     &kp O         &kp ENTER
    &kp LSHFT  &kp Z     &kp X    &kp C                &kp D       &kp V      &kp K     &kp H        &kp COMMA &kp DOT   &mt RSFT FSLH &kp LC(LA(EQUAL))
    &kp LCTRL  &kp LGUI  &kp LALT &to QWE              &mo NAV     &kp SPACE  &mo SY2   &mo NUM      &kp LEFT  &kp DOWN &kp UP         &kp RIGHT
            >;
        };

        
        qwerty {
            bindings = <
    &lt FN ESC &kp Q     &kp W    &kp E                &kp R       &kp T      &kp Y     &kp U        &kp I     &kp O     &kp P         &kp BSPC
    &kp TAB    &kp A     &kp S    &kp D                &kp F       &kp G      &kp H     &kp J        &kp K     &kp L     &kp SQT       &kp ENTER
    &kp LSHFT  &kp Z     &kp X    &kp C                &kp V       &kp B      &kp N     &kp M        &kp COMMA &kp DOT   &mt RSFT FSLH &kp LC(LA(EQUAL))
    &kp LCTRL  &kp LGUI  &kp LALT &to COL              &mo NAV     &kp SPACE  &mo SYM   &mo NUM      &kp LEFT  &kp DOWN &kp UP         &kp RIGHT
            >;
        };


        sym {
            bindings = <
    &trans     &kp GRAVE       &kp AT        &kp HASH       &kp LEFT_BRACE       &kp PERCENT &kp CARET     &kp RIGHT_BRACE       &kp STAR      &kp SEMICOLON    &kp DOUBLE_QUOTES &kp BSPC
    &trans     &kp TILDE       &doeu         &kp MINUS      &kp LEFT_PARENTHESIS &kp PLUS    &kp EQUAL     &kp RIGHT_PARENTHESIS &kp PIPE      &kp COLON        &kp AMPERSAND     &trans
    &trans     &kp EXCLAMATION &kp BACKSLASH &kp UNDERSCORE &kp LEFT_BRACKET     &none       &none         &kp RIGHT_BRACKET     &kp LESS_THAN &kp GREATER_THAN &kp QUESTION      &trans
    &trans     &trans          &trans        &trans         &none                &trans      &trans        &none                 &trans        &trans           &trans            &trans
            >;

        sym2 {
            bindings = <
    &kp N0     &kp N1          &kp N2        &kp N3         &kp N4               &kp N5           &kp N6            &kp N7                &kp N8        &kp N9           &kp DOUBLE_QUOTES &kp GRAVE
    &kp AT     &kp HASH        &kp PERCENT   &kp MINUS      &kp LEFT_PARENTHESIS &kp PLUS         &kp EQUAL         &kp RIGHT_PARENTHESIS &kp PIPE      &kp AMPERSAND    &kp COLON         &kp SEMICOLON
    &kp TILDE  &kp EXCLAMATION &kp STAR      &kp UNDERSCORE &kp LEFT_BRACE       &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp RIGHT_BRACE       &kp LESS_THAN &kp GREATER_THAN &kp QUESTION      &doeu
    &trans     &trans          &trans        &trans         &kp CARET            &trans           &trans            &kp BACKSLASH         &trans        &trans           &trans            &trans
            >;

        num {
            bindings = <
    &trans    &trans       &trans      &trans      &trans        &trans       &trans      &trans   &acc_u    &kp LC(Y)  &trans  &trans
    &trans    &acc_a       &trans      &trans      &trans        &trans       &trans      &trans   &acc_e    &acc_i     &acc_o  &trans
    &trans    &kp LC(Z)    &kp LC(X)   &kp LC(C)   &trans        &kp LC(V)    &trans      &trans   &trans    &trans     &trans  &trans
    &trans    &trans       &trans      &trans      &trans        &trans       &trans      &trans   &trans    &trans     &trans  &trans
            >;
        };

        nav {
            bindings = <
    &trans     &sk LSHFT    &sk LSHFT    &sk LSHFT    &trans       &trans       &trans    &trans    &trans     &trans     &trans   &kp DEL
    &mo NV2    &sk LCTRL    &kp LGUI     &sk LALT     &kp TAB      &trans       &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT  &trans   &trans
    &kp CAPS   &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans     &trans     &trans   &trans
    &trans     &trans       &trans       &trans       &trans       &trans       &trans    &none     &trans     &trans     &trans   &trans
            >;
        };

        nav2 {
            bindings = <
    &trans     &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans     &trans     &trans   &trans
    &trans     &trans       &trans       &trans       &trans       &trans       &kp HOME  &kp PG_DN &kp PG_UP  &kp END    &trans   &trans
    &trans     &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans     &trans     &trans   &trans
    &trans     &trans       &trans       &trans       &trans       &trans       &trans    &trans    &trans     &trans     &trans   &bootloader
            >;
        };

        fn {
            bindings = <
    &trans     &rgb_ug RGB_TOG &rgb_ug RGB_ON  &rgb_ug RGB_OFF &none           &none           &none    &kp F1   &kp F2    &kp F3    &kp F10  &none
    &none      &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_EFF &none    &kp F4   &kp F5    &kp F6    &kp F11  &none
    &none      &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFR &none    &kp F7   &kp F8    &kp F9    &kp F12  &none
    &bt BT_CLR &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &none    &none    &none     &none     &none    &none
            >;
        };
    };
};